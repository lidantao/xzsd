<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xzsd.pc.goods.dao.GoodsDao">
<!--    查询商品分类下拉框接口-->
    <select id="listGoodsCate" parameterType="com.xzsd.pc.goods.entity.GoodsCateInfo" resultType="com.xzsd.pc.goods.entity.GoodsCateInfo">
        select
        goods_cate_code     as      goodsCateCode,
        goods_cate_name     as      goodsCateName
        from t_sys_goods_cate
        where cate_parent_code = #{cateParentCode}
    </select>
<!--    新增商品接口-->
    <insert id="addGoods" parameterType="com.xzsd.pc.goods.entity.GoodsInfo">
        insert into t_sys_goods
        (
        goods_code,         goods_name,         isbn,
        first_cate_code,    second_cate_code,   goods_advertise,
        goods_introduce,    saller_name,        goods_stock,
        goods_cost_price,   goods_price,        goods_image_path,
        goods_author,       goods_publish,      goods_sall_num,
        goods_start_time,   goods_view_num,     goods_active,
        is_delete,          create_user,        create_time,
        last_update_user,   last_update_time,   version
        )
        values
        (
        #{goodsCode},       #{goodsName},       #{isbn},
        #{firstCateCode},   #{secondCateCode},  #{goodsAdvertise},
        #{goodsIntroduce},  #{sallerName},      #{goodsStock},
        #{goodsCostPrice},  #{goodsPrice},      #{goodsImagePath},
        #{goodsAuthor},     #{goodsPublish},    #{goodsSallNum},
        #{goodsStartTime}, #{goodsViewNum},    #{goodsActive},
        #{isDelete},        #{createUser},      now(),
        #{lastUpdateUser},  now(),              0
        )
    </insert>
<!--    查询商品详情接口-->
    <select id="findGoods" parameterType="java.lang.String" resultType="com.xzsd.pc.goods.entity.GoodsInfo">
        select
        goods_name              as      goodsName,
        goods_cost_price        as      goodsCostPrice,
        goods_price             as      goodsPrice,
        goods_sall_num          as      goodsSallNum,
        t1.goods_cate_name      as      firstCateName,
        t2.goods_cate_name      as      secondCateName,
        goods_advertise         as      goodsAdvertise,
        goods_introduce         as      goodsIntroduce,
        goods_active            as      goodsActive,
        goods_start_time        as      goodsStartTime,
        goods_view_num          as      goodsViewNum,
        saller_name             as      sallerName,
        isbn                    as      isbn,
        goods_author            as      goodsAuthor,
        goods_publish           as      goodsPublish
        from
        (
        t_sys_goods a
        LEFT JOIN t_sys_goods_cate t1
        on a.first_cate_code   =   t1.goods_cate_code
        )
        LEFT JOIN
        t_sys_goods_cate t2
        on a.second_cate_code  =   t2.goods_cate_code
        where   goods_code          =   #{goodsCode}
    </select>
<!--    分页查询商品列表接口-->
    <select id="listGoodsByPage" parameterType="com.xzsd.pc.goods.entity.GoodsInfo" resultType="com.xzsd.pc.goods.entity.GoodsInfo">
        select
        goods_code              as      goodsCode,
        goods_name              as      goodsName,
        goods_cost_price        as      goodsCostPrice,
        goods_price             as      goodsPrice,
        goods_sall_num          as      goodsSallNum,
        first_cate_code         as      firstCateCode,
        t1.goods_cate_name      as      firstCateName,
        second_cate_code        as      secondCateCode,
        t2.goods_cate_name      as      secondCateName,
        goods_advertise         as      goodsAdvertise,
        goods_introduce         as      goodsIntroduce,
        goods_active            as      goodsActive,
        goods_start_time        as      goodsStartTime,
        goods_view_num          as      goodsViewNum,
        saller_name             as      sallerName,
        isbn                    as      isbn,
        goods_author            as      goodsAuthor,
        goods_publish           as      goodsPublish,
        goods_stock             as      goodsStock,
        a.version               as      version
        from
        (
        t_sys_goods a
        LEFT JOIN t_sys_goods_cate t1
        on a.first_cate_code   =   t1.goods_cate_code
        )
        LEFT JOIN
        t_sys_goods_cate t2
        on a.second_cate_code  =   t2.goods_cate_code
        where   a.is_delete = 0
        <if test="goodsName != null and goodsName != ''">
            and goods_name like concat('%', #{goodsName}, '%')
        </if>
        <if test="goodsActive != null and goodsActive != ''">
            and goods_active = #{goodsActive}
        </if>
        <if test="goodsAdvertise != null and goodsAdvertise != ''">
            and goods_advertise like concat('%', #{goodsAdvertise}, '%')
        </if>
        <if test="goodsAuthor != null and goodsAuthor != ''">
            and goods_author like concat('%', #{goodsAuthor}, '%')
        </if>
        <if test="goodsPublish != null and goodsPublish != ''">
            and goods_publish like concat('%', #{goodsPublish}, '%')
        </if>
        order by a.create_time
    </select>
<!--    修改商品接口-->
    <update id="updateGoods" parameterType="com.xzsd.pc.goods.entity.GoodsInfo">
        update  t_sys_goods
        set
        goods_name              =       #{goodsName},
        isbn                    =       #{isbn},
        first_cate_code         =       #{firstCateCode},
        second_cate_code        =       #{secondCateCode},
        goods_advertise         =       #{goodsAdvertise},
        goods_introduce         =       #{goodsIntroduce},
        saller_name             =       #{sallerName},
        goods_stock             =       #{goodsStock},
        goods_cost_price        =       #{goodsCostPrice},
        goods_price             =       #{goodsPrice},
        goods_image_path        =       #{goodsImagePath},
        goods_author            =       #{goodsAuthor},
        goods_publish           =       #{goodsPublish},
        version                 =       version + 1,
        last_update_user        =       #{lastUpdateUser},
        last_update_time        =       now()
        where  goods_code   =   #{goodsCode}
        and    version      =   #{version}
    </update>
    <!--    修改商品状态接口-->
    <update id="updateGoodsActive" parameterType="com.xzsd.pc.goods.entity.GoodsDTO">
        update  t_sys_goods
        set
        goods_active            =       #{goodsActive},
        version                 =       version + 1,
        <if test="goodsActive == 1">
            goods_start_time        =       now(),
        </if>
        <if test="goodsActive == 2">
            goods_start_time        =       '0000-00-00 00:00:00',
        </if>
        last_update_user        =       #{lastUpdateUser},
        last_update_time        =       now()
        where (goods_code,version) in
        <foreach collection="mapList" item="list" open="(" separator="," close=")">
            (#{list.goodsCode},#{list.version})
        </foreach>
    </update>
<!--    删除商品接口-->
    <update id="deleteGoods" parameterType="com.xzsd.pc.goods.entity.GoodsDTO">
        update t_sys_goods
        set
        is_delete           =       1,
        version             =       version + 1,
        last_update_user    =       #{lastUpdateUser},
        last_update_time    =       now()
        where
        goods_code in
        <foreach collection="goodsCodeList" item="goodsCode" index="index" open="(" separator="," close=")">
            #{goodsCode}
        </foreach>
    </update>
    <!--    删除热门商品接口-->
    <update id="deleteHotGoods" parameterType="com.xzsd.pc.goods.entity.GoodsDTO">
        update  t_sys_hot_goods
        set
        is_delete           =       1,
        version             =       version + 1,
        last_update_user    =       #{lastUpdateUser},
        last_update_time    =       now()
        where
        goods_code in
        <foreach collection="goodsCodeList" item="goodsCode" index="index" open="(" separator="," close=")">
            #{goodsCode}
        </foreach>
    </update>
    <!--    删除商品关联的轮播图-->
    <update id="deleteRotateGoods" parameterType="com.xzsd.pc.goods.entity.GoodsDTO">
        update  t_sys_rotate
        set
        is_delete           =       1,
        version             =       version + 1,
        last_update_user    =       #{lastUpdateUser},
        last_update_time    =       now()
        where
        goods_code in
        <foreach collection="goodsCodeList" item="goodsCode" index="index" open="(" separator="," close=")">
            #{goodsCode}
        </foreach>
    </update>
<!--    检查轮播图是否存在该删除商品-->
    <select id="checkRotateGoods" parameterType="com.xzsd.pc.goods.entity.GoodsDTO" resultType="int">
        select  count(rotate_code)
        from    t_sys_rotate
        where   goods_code  =   #{goodsCode}
        and     is_delete   =   0
    </select>
    <!--    检查热门商品是否存在该删除商品-->
    <select id="checkHotGoods" parameterType="com.xzsd.pc.goods.entity.GoodsDTO" resultType="int">
        select  count(hot_goods_code)
        from    t_sys_hot_goods
        where   goods_code  =   #{goodsCode}
        and     is_delete   =   0
    </select>
</mapper>