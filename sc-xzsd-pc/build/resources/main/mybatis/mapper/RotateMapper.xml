<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xzsd.pc.rotate.dao.RotateDao">
<!--    检查轮播图是否存在或轮播图排序序号是否存在-->
    <select id="checkRotate" parameterType="com.xzsd.pc.rotate.entity.RotateInfo" resultType="int">
        select  count(rotate_code)
        from    t_sys_rotate
        where   goods_code      = #{goodsCode}
        or      rotate_sort_num = #{rotateSortNum}
    </select>
<!--    新增首页轮播图接口-->
    <insert id="addRotate" parameterType="com.xzsd.pc.rotate.entity.RotateInfo">
        insert into t_sys_rotate
        (
        rotate_code,        rotate_sort_num,        rotate_image_path,
        start_time,         end_time,               goods_code,
        is_delete,          create_user,            create_time,
        last_update_user,   last_update_time,       version
        )
        values
        (
        #{rotateCode},      #{rotateSortNum},       #{rotateImagePath},
        #{startTime},       #{endTime},             #{goodsCode},
        #{isDelete},        #{createUser},          now(),
        #{lastUpdateUser},  now(),                  0
        )
    </insert>
<!--    分页查询首页轮播图接口-->
    <select id="listRotateByPage" parameterType="com.xzsd.pc.rotate.entity.RotateDTO" resultType="com.xzsd.pc.rotate.entity.RotateInfo">
       select
        rotate_code         as      rotateCode,
        rotate_sort_num     as      rotateSortNum,
        rotate_image_path   as      rotateImagePath,
        rotate_active       as      rotateActive,
        start_time          as      startTime,
        end_time            as      endTime,
        goods_code          as      goodsCode,
        version             as      version
        from    t_sys_rotate
        where   is_delete       =   0
        <if test="rotateActive != null and rotateActive != ''">
            and  rotate_active   =   #{rotateActive}
        </if>
        order by create_time
    </select>
<!--    查询商品接口（新增轮播图用）-->
    <select id="listGoodsByPage" parameterType="com.xzsd.pc.rotate.entity.RotateDTO" resultType="com.xzsd.pc.rotate.entity.RotateDTO">
        select
        goods_code              as      goodsCode,
        goods_name              as      goodsName,
        goods_active            as      goodsActive,
        t1.goods_cate_name      as      firstCateName,
        t2.goods_cate_name      as      secondCateName
        from
        t_sys_goods a,
        t_sys_goods_cate_down t1,
        t_sys_goods_cate_down t2
        where   a.first_cate_code   =   t1.goods_cate_code
        and     a.second_cate_code  =   t2.goods_cate_code
        and     a.is_delete         =   0
        <if test="goodsName != null and goodsName != ''">
            and goods_name like concat('%', #{goodsName}, '%')
        </if>
        <if test="goodsCode != null and goodsCode != ''">
            and goods_code like concat('%', #{goodsCode}, '%')
        </if>
    </select>
<!--    修改首页轮播图状态接口-->
    <update id="updateRotate" parameterType="com.xzsd.pc.rotate.entity.RotateDTO">
        update  t_sys_rotate
        set
        version                 =       version + 1,
        last_update_user        =       #{lastUpdateUser},
        last_update_time        =       now(),
        rotate_active           =       #{rotateActive}
        where rotate_code in
        <foreach collection="rotateCodeList" item="rotateCode" index="index" open="(" separator="," close=")">
            #{rotateCode}
        </foreach>
    </update>
<!--    删除首页轮播图接口-->
    <update id="deleteRotate" parameterType="com.xzsd.pc.rotate.entity.RotateDTO">
        update  t_sys_rotate
        set
        version                 =       version + 1,
        last_update_user        =       #{lastUpdateUser},
        last_update_time        =       now(),
        is_delete               =       1
        where rotate_code in
        <foreach collection="rotateCodeList" item="rotateCode" index="index" open="(" separator="," close=")">
            #{rotateCode}
        </foreach>
    </update>
</mapper>
